{"version":3,"file":"react-rnd.umd.js","sources":["../src/index.js"],"sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Draggable from 'react-draggable';\nimport Resizable from 're-resizable';\nimport type { ResizeDirection, ResizeCallback, ResizeStartCallback } from 're-resizable';\n\nexport type Grid = [number, number];\n\nexport type Position = {\n  x: number;\n  y: number;\n}\n\nexport type DraggableData = {\n  node: HTMLElement;\n  deltaX: number, deltaY: number;\n  lastX: number, lastY: number;\n} & Position;\n\nexport type RndDragCallback = (\n  e: Event, data: DraggableData,\n) => void | false;\n\nexport type RndResizeStartCallback = (\n  e: SyntheticMouseEvent<HTMLDivElement> | SyntheticTouchEvent<HTMLDivElement>,\n  dir: ResizeDirection,\n  refToElement: React.ElementRef<'div'>,\n) => void;\n\nexport type ResizableDelta = {\n  width: number, height: number,\n}\n\nexport type RndResizeCallback = (\n  e: MouseEvent | TouchEvent,\n  dir: ResizeDirection,\n  refToElement: React.ElementRef<'div'>,\n  delta: ResizableDelta,\n  position: Position,\n) => void;\n\ntype Size = {\n  width: string | number;\n  height: string | number;\n}\n\ntype State = {\n  disableDragging: boolean;\n  z?: number;\n  original: Position;\n  bounds: {\n    top: number;\n    right: number;\n    bottom: number;\n    left: number;\n  };\n  maxWidth?: number | string;\n  maxHeight?: number | string;\n  isMounted: boolean;\n}\n\nexport type ResizeEnable = {\n  bottom?: boolean,\n  bottomLeft?: boolean,\n  bottomRight?: boolean,\n  left?: boolean,\n  right?: boolean,\n  top?: boolean,\n  topLeft?: boolean,\n  topRight?: boolean\n}\n\nexport type HandleClasses = {\n  bottom?: string,\n  bottomLeft?: string,\n  bottomRight?: string,\n  left?: string,\n  right?: string,\n  top?: string,\n  topLeft?: string,\n  topRight?: string\n}\n\ntype Style = {\n  [key: string]: string | number;\n}\n\nexport type HandleStyles = {\n  bottom?: Style,\n  bottomLeft?: Style,\n  bottomRight?: Style,\n  left?: Style,\n  right?: Style,\n  top?: Style,\n  topLeft?: Style,\n  topRight?: Style\n}\n\ntype Props = {\n  z?: number;\n  dragGrid?: Grid;\n  default?: {\n    x: number;\n    y: number;\n  } & Size;\n  position?: {\n    x: number;\n    y: number;\n  };\n  size?: Size;\n  resizeGrid?: Grid;\n  bounds?: string;\n  onResizeStart?: RndResizeStartCallback;\n  onResize?: RndResizeCallback;\n  onResizeStop?: RndResizeCallback;\n  onDragStart?: RndDragCallback;\n  onDrag?: RndDragCallback;\n  onDragStop?: RndDragCallback;\n  className?: string;\n  style?: Style;\n  children?: React.Node;\n  enableResizing?: ResizeEnable;\n  extendsProps?: { [key: string]: any };\n  resizeHandleClasses?: HandleClasses;\n  resizeHandleStyles?: HandleStyles;\n  resizeHandleWrapperClass?: string;\n  resizeHandleWrapperStyle?: Style;\n  lockAspectRatio?: boolean | number;\n  lockAspectRatioExtraWidth?: number;\n  lockAspectRatioExtraHeight?: number;\n  maxHeight?: number | string;\n  maxWidth?: number | string;\n  minHeight?: number | string;\n  minWidth?: number | string;\n  dragAxis?: 'x' | 'y' | 'both' | 'none';\n  dragHandleClassName?: string;\n  disableDragging?: boolean;\n  cancel?: boolean;\n  _freeBottomBounds?: boolean; // Back door for react-elastic-grid.\n}\n\nconst resizableStyle = {\n  width: 'auto',\n  height: 'auto',\n  display: 'inline-block',\n  position: 'absolute',\n  top: 0,\n  left: 0,\n};\n\nexport default class Rnd extends React.Component<Props, State> {\n  static defaultProps = {\n    maxWidth: Number.MAX_SAFE_INTEGER,\n    maxHeight: Number.MAX_SAFE_INTEGER,\n    onResizeStart: () => { },\n    onResize: () => { },\n    onResizeStop: () => { },\n    onDragStart: () => { },\n    onDrag: () => { },\n    onDragStop: () => { },\n  };\n  resizable: (React$ElementRef<typeof Resizable> | null);\n  draggable: Draggable;\n  onResizeStart: ResizeStartCallback;\n  onResize: ResizeCallback;\n  onResizeStop: ResizeCallback;\n  onDragStart: RndDragCallback;\n  onDrag: RndDragCallback;\n  onDragStop: RndDragCallback;\n  getMaxSizesFromProps: () => ({\n    maxWidth: number | string;\n    maxHeight: number | string;\n  });\n  wrapper: HTMLElement;\n  parentId: string;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      disableDragging: false,\n      z: props.z,\n      original: {\n        x: 0,\n        y: 0,\n      },\n      bounds: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n      },\n      maxWidth: props.maxWidth,\n      maxHeight: props.maxHeight,\n      isMounted: false,\n    };\n    this.onResizeStart = this.onResizeStart.bind(this);\n    this.onResize = this.onResize.bind(this);\n    this.onResizeStop = this.onResizeStop.bind(this);\n    this.onDragStart = this.onDragStart.bind(this);\n    this.onDrag = this.onDrag.bind(this);\n    this.onDragStop = this.onDragStop.bind(this);\n    this.getMaxSizesFromProps = this.getMaxSizesFromProps.bind(this);\n  }\n\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (this.props.z !== nextProps.z) {\n      this.setState({ z: nextProps.z });\n    }\n  }\n\n  componentDidMount() {\n    this.setParentPosition();\n  }\n\n  getParentSize(): { width: number, height: number } {\n    return (this.resizable: any).getParentSize();\n  }\n\n  getMaxSizesFromProps(): { maxWidth: number | string; maxHeight: number | string } {\n    const maxWidth = typeof this.props.maxWidth === 'undefined' ? Number.MAX_SAFE_INTEGER : this.props.maxWidth;\n    const maxHeight = typeof this.props.maxHeight === 'undefined' ? Number.MAX_SAFE_INTEGER : this.props.maxHeight;\n    return { maxWidth, maxHeight };\n  }\n\n  getSelfElement(): null | Element | Text {\n    if (!this) return null;\n    return findDOMNode(this);\n  }\n\n  setParentPosition() {\n    const element = this.getSelfElement();\n    if (element instanceof Element) {\n      const parent = element.parentNode;\n      if (!parent || typeof window === 'undefined') return;\n      if (!(parent instanceof HTMLElement)) return;\n      if (getComputedStyle(parent).position !== 'static') {\n        this.setState({ isMounted: true });\n        return;\n      }\n      parent.style.position = 'relative';\n      this.setState({ isMounted: true });\n    }\n  }\n\n  onDragStart(e: Event, data: DraggableData) {\n    if (this.props.onDragStart) {\n      this.props.onDragStart(e, data);\n    }\n    if (!this.props.bounds) return;\n    const parent = this.resizable && this.resizable.parentNode;\n    const target = this.props.bounds === 'parent'\n      ? parent\n      : document.querySelector(this.props.bounds);\n    if (!(target instanceof HTMLElement) || !(parent instanceof HTMLElement)) return;\n    const targetRect = target.getBoundingClientRect();\n    const targetLeft = targetRect.left;\n    const targetTop = targetRect.top;\n    const parentRect = parent.getBoundingClientRect();\n    const parentLeft = parentRect.left;\n    const parentTop = parentRect.top;\n    const left = targetLeft - parentLeft;\n    const top = targetTop - parentTop;\n    if (!this.resizable) return;\n    this.setState({\n      bounds: {\n        top,\n        right: left + (target.offsetWidth - this.resizable.size.width),\n        bottom: this.props._freeBottomBounds // eslint-disable-line\n          ? 2147483647\n          : top + (target.offsetHeight - this.resizable.size.height),\n        left,\n      },\n    });\n  }\n\n  onDrag(e: Event, data: DraggableData) {\n    if (this.props.onDrag) {\n      this.props.onDrag(e, data);\n    }\n  }\n\n  onDragStop(e: Event, data: DraggableData) {\n    if (this.props.onDragStop) {\n      this.props.onDragStop(e, data);\n    }\n  }\n\n  onResizeStart(\n    e: SyntheticMouseEvent<HTMLDivElement> | SyntheticTouchEvent<HTMLDivElement>,\n    dir: ResizeDirection,\n    refToElement: React.ElementRef<'div'>,\n  ) {\n    e.stopPropagation();\n    this.setState({\n      disableDragging: true,\n      original: { x: this.draggable.state.x, y: this.draggable.state.y },\n    });\n    if (this.props.bounds) {\n      const parent = this.resizable && this.resizable.parentNode;\n      const target = this.props.bounds === 'parent'\n        ? parent\n        : document.querySelector(this.props.bounds);\n      const self = this.getSelfElement();\n      if (self instanceof Element && target instanceof HTMLElement && parent instanceof HTMLElement) {\n        let { maxWidth, maxHeight } = this.getMaxSizesFromProps();\n        const parentSize = this.getParentSize();\n        if (maxWidth && typeof maxWidth === 'string') {\n          if (maxWidth.endsWith('%')) {\n            const ratio = Number(maxWidth.replace('%', '')) / 100;\n            maxWidth = parentSize.width * ratio;\n          } else if (maxWidth.endsWith('px')) {\n            maxWidth = Number(maxWidth.replace('px', ''));\n          }\n        }\n        if (maxHeight && typeof maxHeight === 'string') {\n          if (maxHeight.endsWith('%')) {\n            const ratio = Number(maxHeight.replace('%', '')) / 100;\n            maxHeight = parentSize.width * ratio;\n          } else if (maxHeight.endsWith('px')) {\n            maxHeight = Number(maxHeight.replace('px', ''));\n          }\n        }\n        const selfRect = self.getBoundingClientRect();\n        const selfLeft = selfRect.left;\n        const selfTop = selfRect.top;\n        const targetRect = target.getBoundingClientRect();\n        const targetLeft = targetRect.left;\n        const targetTop = targetRect.top;\n        if (/left/i.test(dir) && this.resizable) {\n          const max = (selfLeft - targetLeft) + this.resizable.size.width;\n          this.setState({ maxWidth: max > Number(maxWidth) ? maxWidth : max });\n        }\n        if (/right/i.test(dir)) {\n          const max = target.offsetWidth + (targetLeft - selfLeft);\n          this.setState({ maxWidth: max > Number(maxWidth) ? maxWidth : max });\n        }\n        if (/top/i.test(dir) && this.resizable) {\n          const max = (selfTop - targetTop) + this.resizable.size.height;\n          this.setState({ maxHeight: max > Number(maxHeight) ? maxHeight : max });\n        }\n        if (/bottom/i.test(dir)) {\n          const max = target.offsetHeight + (targetTop - selfTop);\n          this.setState({ maxHeight: max > Number(maxHeight) ? maxHeight : max });\n        }\n      }\n    } else {\n      this.setState({ maxWidth: this.props.maxWidth, maxHeight: this.props.maxHeight });\n    }\n    if (this.props.onResizeStart) {\n      this.props.onResizeStart(e, dir, refToElement);\n    }\n  }\n\n  onResize(\n    e: MouseEvent | TouchEvent,\n    direction: ResizeDirection,\n    refToResizableElement: React.ElementRef<'div'>,\n    delta: { height: number, width: number },\n  ) {\n    let x;\n    let y;\n    if (/left/i.test(direction)) {\n      x = this.state.original.x - delta.width;\n      this.draggable.setState({ x });\n    }\n    if (/top/i.test(direction)) {\n      y = this.state.original.y - delta.height;\n      this.draggable.setState({ y });\n    }\n    if (this.props.onResize) {\n      this.props.onResize(\n        e,\n        direction,\n        refToResizableElement,\n        delta,\n        {\n          x: x || this.draggable.state.x,\n          y: y || this.draggable.state.y,\n        });\n    }\n  }\n\n  onResizeStop(\n    e: MouseEvent | TouchEvent,\n    direction: ResizeDirection,\n    refToResizableElement: HTMLDivElement,\n    delta: { height: number, width: number },\n  ) {\n    const { maxWidth, maxHeight } = this.getMaxSizesFromProps();\n    this.setState({ disableDragging: false, maxWidth, maxHeight });\n    if (this.props.onResizeStop) {\n      const position: Position = {\n        x: this.draggable.state.x,\n        y: this.draggable.state.y,\n      };\n      this.props.onResizeStop(e, direction, refToResizableElement, delta, position);\n    }\n  }\n\n  updateSize(size: { width: number | string, height: number | string }) {\n    if (!this.resizable) return;\n    this.resizable.updateSize({ width: size.width, height: size.height });\n  }\n\n  updatePosition(position: Position) {\n    this.draggable.setState(position);\n  }\n\n  updateZIndex(z: number) {\n    this.setState({ z });\n  }\n\n  render(): React.Node {\n    const cursorStyle = this.props.disableDragging || this.props.dragHandleClassName\n      ? { cursor: 'normal' }\n      : { cursor: 'move' };\n    const innerStyle = {\n      ...resizableStyle,\n      zIndex: this.state.z,\n      ...cursorStyle,\n      ...this.props.style,\n    };\n    // HACK: Wait for setting relative to parent element.\n    if (!this.state.isMounted) return <div />;\n    const maxHeight = this.props._freeBottomBounds ? 2147483647 : this.state.maxHeight; // eslint-disable-line\n    return (\n      <Draggable\n        ref={(c: Draggable) => { this.draggable = c; }}\n        handle={this.props.dragHandleClassName}\n        defaultPosition={this.props.default}\n        onStart={this.onDragStart}\n        onDrag={this.onDrag}\n        onStop={this.onDragStop}\n        axis={this.props.dragAxis}\n        disabled={this.props.disableDragging}\n        grid={this.props.dragGrid}\n        bounds={this.props.bounds ? this.state.bounds : undefined}\n        position={this.props.position}\n        enableUserSelectHack={false}\n        cancel={this.props.cancel}\n      >\n        <Resizable\n          {...this.props.extendsProps}\n          className={this.props.className}\n          ref={(c: (React$ElementRef<typeof Resizable> | null)) => {\n            this.resizable = c;\n          }}\n          defaultSize={this.props.default}\n          size={this.props.size}\n          enable={this.props.enableResizing}\n          onResizeStart={this.onResizeStart}\n          onResize={this.onResize}\n          onResizeStop={this.onResizeStop}\n          style={innerStyle}\n          minWidth={this.props.minWidth}\n          minHeight={this.props.minHeight}\n          maxWidth={this.state.maxWidth}\n          maxHeight={maxHeight}\n          grid={this.props.resizeGrid}\n          handleWrapperClass={this.props.resizeHandleWrapperClass}\n          handleWrapperStyle={this.props.resizeHandleWrapperStyle}\n          lockAspectRatio={this.props.lockAspectRatio}\n          lockAspectRatioExtraWidth={this.props.lockAspectRatioExtraWidth}\n          lockAspectRatioExtraHeight={this.props.lockAspectRatioExtraHeight}\n          handleStyles={this.props.resizeHandleStyles}\n          handleClasses={this.props.resizeHandleClasses}\n        >\n          {this.props.children}\n        </Resizable>\n      </Draggable >\n    );\n  }\n}\n"],"names":["resizableStyle","Rnd","props","state","z","maxWidth","maxHeight","onResizeStart","bind","onResize","onResizeStop","onDragStart","onDrag","onDragStop","getMaxSizesFromProps","nextProps","setState","setParentPosition","resizable","getParentSize","Number","MAX_SAFE_INTEGER","findDOMNode","element","getSelfElement","Element","parent","parentNode","window","HTMLElement","getComputedStyle","position","isMounted","style","e","data","bounds","target","document","querySelector","targetRect","getBoundingClientRect","targetLeft","left","targetTop","top","parentRect","parentLeft","parentTop","offsetWidth","size","width","_freeBottomBounds","offsetHeight","height","dir","refToElement","stopPropagation","x","draggable","y","self","parentSize","endsWith","ratio","replace","selfRect","selfLeft","selfTop","test","max","direction","refToResizableElement","delta","original","disableDragging","updateSize","cursorStyle","dragHandleClassName","cursor","innerStyle","React.createElement","c","default","dragAxis","dragGrid","undefined","cancel","extendsProps","className","enableResizing","minWidth","minHeight","resizeGrid","resizeHandleWrapperClass","resizeHandleWrapperStyle","lockAspectRatio","lockAspectRatioExtraWidth","lockAspectRatioExtraHeight","resizeHandleStyles","resizeHandleClasses","children","React","defaultProps"],"mappings":"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"}